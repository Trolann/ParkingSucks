version: '3.7'

networks:
  default:
    driver: bridge
  williamson:
    name: williamson

services:
  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    restart: unless-stopped
#    volumes:
#      - ~/jenkins_home:/var/jenkins_home
#      - ~/docker/conf/jenkins:/var/jenkins_conf
    networks:
      - williamson

  nginx:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ~/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - /etc/letsencrypt/live:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/letsencrypt/live/se-squared.cc/fullchain.pem:/etc/nginx/certs/se-squared.cc/fullchain.pem
      - /etc/letsencrypt/live/se-squared.cc/privkey.pem:/etc/nginx/certs/se-squared.cc/privkey.pem
    environment:
      - DEFAULT_HOST=se-squared.cc
    networks:
      - williamson

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    networks:
      - williamson
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/portainer:/data
    security_opt:
      - no-new-privileges:true

#Prompts:
#  #1:
#  write a docker compose file to run a jenkins container with the pipeline
#  above and the nginx reverse proxy running with the given conf. Make a custom
#  network called williamson for them to communicate and only nginx's 443 and
#  80 ports should be opened. use persistent docker volumes and assume
#  configuration files are located in ~/docker/conf
#  #2:
#  why did you expose jenkin's ports when nginx can communicate
#  over the williamson network?
#
#  why did you use driver:bridge for the network? is this the most secure?
#  #3:
#  rewrite the compose file assuming the only way containers on this network
#  will be accessed is via the nginx reverse proxy. Use the most secure network
#  driver among the network which allows all traffic to access via the nginx reverse proxy.


# Additional server setup Prompts and results:
Prompt:
  write a command to install and use certbot to generate a wildcard certificate for *.williamson-rfp.app using the email trevor@sjsu.edu
Result:
  sudo apt-get update
  sudo apt-get install certbot -y
  sudo certbot certonly --manual -d *.williamson-rfp.app -m trevor@sjsu.edu --agree-tos --no-eff-email --manual-public-ip-logging-ok



